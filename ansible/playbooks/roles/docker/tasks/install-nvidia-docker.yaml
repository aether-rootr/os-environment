---
- import_role:
    name: docker
    tasks_from: common

- name: Setting up the installation environment
  block:
    - name: Add libnvidia-container GPG apt Key
      apt_key:
        url: https://nvidia.github.io/libnvidia-container/gpgkey
        state: present
    
    - name: Get libnvidia-container Repository
      shell: curl -s -L \
              "https://nvidia.github.io/libnvidia-container/{{ ansible_distribution | lower }}{{ ansible_distribution_version }}/libnvidia-container.list" | \
              sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g'
      register: libnvidia_container_repo_deb

    - name: Add libnvidia-container Repository
      apt_repository:
        repo: '{{libnvidia_container_repo_deb.stdout}}'
        state: present

- name: Install nvidia docker deps
  apt:
    name: '{{ packages }}'
    state: present
    install_recommends: false
    force: true
    update_cache: true
  vars:
    packages:
      - nvidia-container-toolkit
      - nvidia-docker2
  when: is_ubuntu_18_04 or is_ubuntu_20_04

- name: Create directory /etc/docker
  file: 
    path: /etc/docker
    state: directory
    mode: 0755

- name: Create file /etc/docker/deamon.json
  copy:
    dest: /etc/docker/deamon.json
    content: |
      {
        "exec-opts": ["native.cgroupdriver=systemd"],
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "100m"
        },
        "storage-driver": "overlay2",
        "live-restore": true,
        "default-runtime": "nvidia",
        "runtimes": {
            "nvidia": {
                "path": "/usr/bin/nvidia-container-runtime",
                "runtimeArgs": []
            }
        }
      }
    mode: 0644
  register: update_docker_deamon_config

- name: Restart docker service
  service:
    name: docker
    state: restarted
  when: not is_in_container and update_docker_deamon_config.changed
